// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Printf = require("bs-platform/lib/js/printf.js");

function year(param) {
  switch (param) {
    case /* Mercury */0 :
        return 87.969;
    case /* Venus */1 :
        return 224.701;
    case /* Earth */2 :
        return 365.256;
    case /* Mars */3 :
        return 686.980;
    case /* Jupiter */4 :
        return 4332.6;
    case /* Saturn */5 :
        return 10759.2;
    case /* Uranus */6 :
        return 30685;
    case /* Neptune */7 :
        return 60190;
    case /* Pluto */8 :
        return 90465;
    
  }
}

function orbit(param) {
  switch (param) {
    case /* Mercury */0 :
        return 57.91;
    case /* Venus */1 :
        return 108.21;
    case /* Earth */2 :
        return 149.60;
    case /* Mars */3 :
        return 227.92;
    case /* Jupiter */4 :
        return 778.57;
    case /* Saturn */5 :
        return 1433.5;
    case /* Uranus */6 :
        return 2872.46;
    case /* Neptune */7 :
        return 4495.1;
    case /* Pluto */8 :
        return 5869.7;
    
  }
}

function name(param) {
  switch (param) {
    case /* Mercury */0 :
        return "Mercury";
    case /* Venus */1 :
        return "Venus";
    case /* Earth */2 :
        return "Earth";
    case /* Mars */3 :
        return "Mars";
    case /* Jupiter */4 :
        return "Jupiter";
    case /* Saturn */5 :
        return "Saturn";
    case /* Uranus */6 :
        return "Uranus";
    case /* Neptune */7 :
        return "Neptune";
    case /* Pluto */8 :
        return "Pluto";
    
  }
}

var pi = 4.0 * Math.atan(1.0);

function draw_text(draw, color, x, y, txt) {
  return draw.text(txt.move, x, y.font, {
              fill: color
            });
}

function draw_line(draw, color, from_x, from_y, to_x, to_y) {
  return draw.line(from_x, from_y, to_x, to_y).stroke({
              width: 1,
              color: color
            });
}

function draw_main(draw, outer_planet, inner_planet, orbits) {
  var outer_planet_year = year(outer_planet);
  var inner_planet_year = year(inner_planet);
  var outer_planet_radius = orbit(outer_planet);
  var inner_planet_radius = orbit(inner_planet);
  var interval_days = outer_planet_year / 75;
  var ycenter = 200;
  var xcenter = 200;
  var r2 = ycenter * inner_planet_radius / outer_planet_radius;
  var r = 0;
  var rstop = outer_planet_year * orbits;
  var a1 = 0;
  var a1_interval = 2 * pi * interval_days / outer_planet_year;
  var a2 = 0;
  var a2_interval = 2 * pi * interval_days / inner_planet_year;
  var outer_planet_name = name(outer_planet);
  var inner_planet_name = name(inner_planet);
  var orbit_text = Curry._1(Printf.sprintf(/* Format */{
            _0: {
              TAG: /* Float */8,
              _0: /* Float_f */0,
              _1: /* No_padding */0,
              _2: /* Lit_precision */{
                _0: 0
              },
              _3: {
                TAG: /* String_literal */11,
                _0: " orbits",
                _1: /* End_of_format */0
              }
            },
            _1: "%.0f orbits"
          }), orbits);
  var f = {
    fill: "#0000FF"
  };
  draw.image("image/favicon-32x32.png", 32, 32).move(368, 0);
  draw.text(outer_planet_name).move(10, 20).font(f).rotate(-20, 10, 10);
  draw.text(inner_planet_name).move(10, 40).font(f);
  draw.text(orbit_text).move(10, 380).font(f);
  draw.link("http://mamewo.ddo.jp/").text("link").move(350, 30);
  draw.text(orbit_text).move(10, 380).font(f);
  draw.rect(20, 20).fill("#070").move(10, 320);
  draw.circle(20).fill("red").move(10, 360);
  draw.ellipse(10, 20).fill("pink").move(40, 360);
  draw.polyline("0,0 10,50 50,10").fill("none").stroke({
          width: 1
        }).move(320, 10);
  draw.path("M0,0 10,50 50,10").fill("none").stroke({
          width: 4,
          color: "aqua"
        }).move(320, 0);
  while(r < rstop) {
    var i = Math.floor(r / interval_days / 75) | 0;
    var color = i === 0 ? "#000000" : (
        i === 1 ? "#0000FF" : (
            i === 2 ? "#FF0000" : (
                i === 3 ? "#00FF00" : (
                    i === 4 ? "#800080" : (
                        i === 5 ? "#800000" : (
                            i === 6 || i === 7 ? "#8B0000" : "#FFA500"
                          )
                      )
                  )
              )
          )
      );
    a1 = a1 - a1_interval;
    a2 = a2 - a2_interval;
    var x1 = ycenter * Math.cos(a1);
    var y1 = ycenter * Math.sin(a1);
    var x2 = r2 * Math.cos(a2);
    var y2 = r2 * Math.sin(a2);
    draw_line(draw, color, x1 + xcenter | 0, y1 + ycenter | 0, x2 + xcenter | 0, y2 + ycenter | 0);
    r = r + interval_days;
  };
  
}

function main(param) {
  var draw = SVG().addTo("#target");
  draw.size(400, 400);
  draw_main(draw, /* Earth */2, /* Venus */1, 8);
  
}

window.addEventListener("load", (function (param) {
        return main(undefined);
      }));

var canvas_len = 400;

var black = {
  NAME: "Color",
  VAL: "#000000"
};

var blue = {
  NAME: "Color",
  VAL: "#0000FF"
};

var red = {
  NAME: "Color",
  VAL: "#FF0000"
};

var green = {
  NAME: "Color",
  VAL: "#00FF00"
};

var purple = {
  NAME: "Color",
  VAL: "#800080"
};

var maroon = {
  NAME: "Color",
  VAL: "#800000"
};

var navy = {
  NAME: "Color",
  VAL: "#8B0000"
};

var dark_red = {
  NAME: "Color",
  VAL: "#8B0000"
};

var orange = {
  NAME: "Color",
  VAL: "#FFA500"
};

exports.year = year;
exports.orbit = orbit;
exports.name = name;
exports.canvas_len = canvas_len;
exports.pi = pi;
exports.black = black;
exports.blue = blue;
exports.red = red;
exports.green = green;
exports.purple = purple;
exports.maroon = maroon;
exports.navy = navy;
exports.dark_red = dark_red;
exports.orange = orange;
exports.draw_text = draw_text;
exports.draw_line = draw_line;
exports.draw_main = draw_main;
exports.main = main;
/* pi Not a pure module */
